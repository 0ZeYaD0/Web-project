/* visibility-fix.css */
/*
    This stylesheet provides forceful overrides to ensure critical UI elements
    are visible and correctly displayed. It is intended to address
    potential conflicts or cascading issues from other stylesheets.

    Ideally, these issues should be resolved in the primary stylesheets
    by adjusting specificity and rule order to avoid excessive use of '!important'.
*/

/* Ensure base visibility for cards and list items */
.card,
.popular-list li, /* Assuming .popular-list li are card-like items */
.related-card {
    display: block !important; /* Overriding display if previously hidden */
    opacity: 1 !important; /* Overriding opacity if previously transparent */
    visibility: visible !important; /* Overriding visibility if previously hidden */
    transform: none !important; /* Resetting transforms that might affect visibility/layout */
}

/* Ensure content within cards is displayed as a flex container */
.card .content,
.popular-list li .content,
.related-card .content { /* Assuming .content is a direct child */
    display: flex !important; /* Forcing flex display for layout */
    opacity: 1 !important;
    visibility: visible !important;
}

/* Ensure text elements within cards are visible and have a default color */
.card .content h2,
.card .content p,
.popular-list li h3, /* This selector might be too broad if not all h3 are content titles */
.popular-list li .content h3,
.popular-list li .content p,
.related-card h4 {
    display: block !important; /* Ensure block display for proper layout if needed */
    opacity: 1 !important;
    visibility: visible !important;
    color: white !important; /* Fallback color if theme variables fail or are overridden */
}

/* Ensure image containers and images are block-level and visible */
.card .image-box,
.card .image-box img,
.popular-list li img, /* Consider a parent .image-box for consistency if applicable */
.related-image,
.related-image img {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Set minimum height and background for image containers to prevent collapse */
.card .image-box,
.popular-list li .image-box, /* Added for consistency with .card */
.related-image {
    min-height: 200px !important; /* Ensure container has dimensions */
    position: relative !important; /* For absolute positioning of pseudo-elements if used */
    background-color: rgba(30, 30, 60, 0.4) !important; /* Fallback background */
}

/* Ensure visibility for section containers */
.popular-section,
.popular-list,
.related-manga {
    opacity: 1 !important;
    visibility: visible !important;
}

/*
   .popular-section {
       // Original comment: "flex needs this gone or it breaks lol"
       // This implies a conflicting flex property was being overridden.
       // If a specific property was being reset (e.g., flex: auto !important;),
       // it should be stated here. Leaving empty if the fix was just removing a rule.
   }
*/

/* Reset animations that might cause visibility issues */
.card-animated { /* This class likely applies animations */
    opacity: 1 !important; /* Ensure full opacity, overriding animation start state */
    transform: none !important; /* Reset transforms, overriding animation start state */
}

/* Ensure hovering cards have a higher z-index to appear on top */
.hovering { /* Class applied on hover */
    z-index: 10 !important; /* Bring to front */
}

/* Default card shadow and transform properties */
.card {
    /*
        Note: Applying box-shadow and transform properties here with !important
        can make it very difficult to customize them later or have hover effects
        that alter these properties without also using !important.
        These are likely better placed in styles.css without !important.
    */
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5) !important;
    transform-origin: center !important;
    transform-style: preserve-3d !important; /* For 3D transforms */
}

/* Gradient background for card content */
.card .content {
    /*
        This !important forces a specific background, overriding theme or hover effects
        defined elsewhere without !important.
    */
    background: linear-gradient(to top,
        rgba(0, 0, 0, 0.9) 0%,
        rgba(0, 0, 0, 0.7) 30%,
        rgba(0, 0, 0, 0.4) 60%,
        rgba(0, 0, 0, 0.3) 100%) !important;
}

/* Text shadow for readability on card content */
.card .content h2,
.card .content p {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;
}

/* Styling for image boxes when an image fails to load */
.image-box.img-error { /* Class added by JS when image error occurs */
    position: relative !important; /* Ensure correct positioning for pseudo-element */
    background-color: rgba(30, 30, 60, 0.6) !important;
}

/* Display image title as fallback content */
.image-box.img-error::before {
    content: attr(data-title) !important; /* Display alt text or title */
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    text-align: center !important;
    padding: 20px !important; /* Ensure text is not at the very edges */
    color: white !important;
    font-weight: bold !important;
    font-size: 1rem !important;
    z-index: 5 !important; /* Ensure it's above the broken image icon but below other overlays */
    background-color: rgba(30, 30, 60, 0.8) !important; /* Darken background for readability */
}

/* Hide broken image icons */
img.error-img { /* Class added to img tag by JS on error */
    display: none !important; /* Hides the element and its space */
    opacity: 0 !important; /* Ensure it's not just transparent */
    visibility: hidden !important;
}

/* CSS overrides to fix visibility */

/* Make cards visible by default */
.card {
  display: block !important;
  opacity: 1 !important;
  visibility: visible !important;
}

.card .content {
  display: flex !important;
  opacity: 1 !important;
  visibility: visible !important;
}

.card .content h2,
.card .content p {
  opacity: 1 !important;
  visibility: visible !important;
}

.popular-list,
.popular-section {
  display: block !important;
  opacity: 1 !important;
  visibility: visible !important;
}

/* Ensure hamburger is visible on mobile */
@media (max-width: 768px) {
  .hamburger {
    display: flex !important;
  }
  
  nav > div:first-child {
    display: none !important;
  }
}

/* Fix for anime/manga details pages */
.anime-detail .episode-item,
.manga-detail .chapter-item {
  display: flex !important;
}

/* Side menu visibility fix */
.side-menu.open {
  left: 0 !important;
}

/* Fix for watch/read buttons */
.watch-episode-btn,
.read-chapter-btn {
  display: inline-block !important;
}

/* Make sure detail pages respect theme colors */
.manga-detail,
.anime-detail,
.manga-header,
.anime-header,
.manga-content,
.anime-content,
.manga-chapters,
.anime-episodes,
.manga-related,
.anime-related,
.related-manga,
.related-anime {
  background-color: var(--card-bg) !important;
  color: var(--text-color) !important;
  box-shadow: var(--shadow) !important;
}

/* Fix text colors in detail pages */
.manga-info h3,
.anime-info h3,
.manga-chapters h3,
.anime-episodes h3,
.manga-related h3,
.anime-related h3 {
  color: var(--primary-color) !important;
}

.chapter-item,
.episode-item {
  background-color: rgba(var(--primary-rgb), 0.05) !important;
}

/* Fix image visibility on detail pages */
.manga-image img,
.anime-image img {
  display: block !important;
  opacity: 1 !important;
  visibility: visible !important;
  border-radius: 10px !important;
}